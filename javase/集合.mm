{"objectClass":"NSDictionary","root":{"objectClass":"MindNode","ID":"7TJ4I","rootPoint":{"objectClass":"CGPoint","x":276.5,"y":775.5},"lineColorHex":"#BBBBBB","children":{"0":{"objectClass":"MindNode","ID":"C7T1C","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"M2BN8","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"79X44","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"M16V2","lineColorHex":"#DC306C","text":"1  k,v都可以\n为null，  "},"1":{"objectClass":"MindNode","ID":"55467","lineColorHex":"#DC306C","text":"2  只有一个k可以为null,v可以多个null"},"2":{"objectClass":"MindNode","ID":"O58Z4","lineColorHex":"#DC306C","text":"3  HashMap并不保证任何顺序性\n插入，取出来不一致；"},"objectClass":"NSArray"},"text":"特点"},"1":{"objectClass":"MindNode","ID":"D84R4","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"2PLS4","lineColorHex":"#DC306C","text":"单线程，效率高"},"objectClass":"NSArray"},"text":"适用场景"},"objectClass":"NSArray"},"text":"HashMap"},"1":{"objectClass":"MindNode","ID":"00838","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"06T77","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"4D512","lineColorHex":"#DC306C","text":"1 k和v都不允许为null,      "},"1":{"objectClass":"MindNode","ID":"H53B3","lineColorHex":"#DC306C","text":"2 是线程安全的，但是效率不高"},"objectClass":"NSArray"},"text":"特点"},"1":{"objectClass":"MindNode","ID":"PF233","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"2O7ZG","lineColorHex":"#DC306C","text":"1 高并发，线程安全的情况下使用"},"objectClass":"NSArray"},"text":"使用场景"},"objectClass":"NSArray"},"text":"HashTable"},"2":{"objectClass":"MindNode","ID":"J7ER0","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"953VG","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"337S6","lineColorHex":"#DC306C","text":"1 是一个有序的key-value集合，它是通过红黑树实现的"},"1":{"objectClass":"MindNode","ID":"6VTD3","lineColorHex":"#DC306C","text":"2 实现了Cloneable接口，\n意味着它能被克隆"},"2":{"objectClass":"MindNode","ID":"931C5","lineColorHex":"#DC306C","text":"3 实现了java.io.Serializable接口，意味着它支持序列化"},"3":{"objectClass":"MindNode","ID":"YV9ZG","lineColorHex":"#DC306C","text":"4 基于红黑树（Red-Black tree）实现。该映射根据其键的自然顺序进行排序，或者根据创建映射时提供的 Comparator 进行排序，具体取决于使用的构造方法。"},"objectClass":"NSArray"},"text":"简介"},"1":{"objectClass":"MindNode","ID":"7H8FP","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"1OR98","lineColorHex":"#DC306C","text":"1 和HashMap相似"},"1":{"objectClass":"MindNode","ID":"244VK","lineColorHex":"#DC306C","text":"2 非同步的。 它的iterator 方法返回的迭代器是fail-fastl的"},"2":{"objectClass":"MindNode","ID":"8V891","lineColorHex":"#DC306C","text":"3  基本操作 containsKey、get、put 和 remove 的时间复杂度是 log(n) "},"objectClass":"NSArray"},"text":"特点"},"2":{"objectClass":"MindNode","ID":"5D9N7","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"IGU6U","lineColorHex":"#DC306C","text":"1  需要基于排序的统计功能"},"1":{"objectClass":"MindNode","ID":"7SP31","lineColorHex":"#DC306C","text":"2  需要快速增删改查而且需要保证遍历和插入顺序一致的存储功能"},"objectClass":"NSArray"},"text":"使用场景"},"objectClass":"NSArray"},"text":"TreeMap"},"3":{"objectClass":"MindNode","ID":"37HV4","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"SX786","lineColorHex":"#DC306C","text":""},"objectClass":"NSArray"},"text":"  Linked\nHashMap                          \n"},"objectClass":"NSArray"},"text":"Map"},"1":{"objectClass":"MindNode","ID":"43RBL","lineColorHex":"#BF58F5","children":{"0":{"objectClass":"MindNode","ID":"U7X3I","lineColorHex":"#BF58F5","text":"List"},"1":{"objectClass":"MindNode","ID":"PT78V","lineColorHex":"#BF58F5","text":"Set"},"2":{"objectClass":"MindNode","ID":"28V2J","lineColorHex":"#BF58F5","text":"queue"},"objectClass":"NSArray"},"text":"Collection"},"objectClass":"NSArray"},"text":"集合"}}